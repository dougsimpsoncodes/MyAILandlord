rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }
    
    function isValidAudio() {
      return request.resource.contentType.matches('audio/.*') &&
             request.resource.size < 50 * 1024 * 1024; // 50MB limit
    }
    
    // User profile images
    match /users/{userId}/profile/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isValidImage();
    }
    
    // Case images
    match /cases/{caseId}/images/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidImage();
    }
    
    // Case voice notes
    match /cases/{caseId}/audio/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidAudio();
    }
  }
}